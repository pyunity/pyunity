[build-system]
requires = [
    "cython>=3.0.0a8",
    "wheel>=0.29.0",
    "setuptools>=61.2"
]
build-backend = "setuptools.build_meta"

[project]
name = "pyunity"
authors = [{name = "The PyUnity Team", email = "tankimarshal2@gmail.com"}]
description = "A pure Python 3D Game Engine that was inspired by the structure of the Unity Game Engine"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
requires-python = ">=3.6"
dependencies = [
    "pyopengl",
    "pillow",
    "pysdl2",
    "pysdl2-dll",
    "pyglm",
]
dynamic = ["version"]

[project.readme]
file = "README.md"
content-type = "text/markdown; charset=UTF-8"

[project.urls]
Homepage = "https://docs.pyunity.x10.bz/"
Documentation = "https://docs.pyunity.x10.bz/"
Source = "https://github.com/pyunity/pyunity"
Tracker = "https://github.com/pyunity/pyunity/issues"
Changelog = "https://docs.pyunity.x10.bz/en/latest/releases.html"

[project.optional-dependencies]
providers = [
    # Other window providers as needed
    "glfw",
    "glcontext",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-toolbox>=1.1.0",
    "sphinx-hoverxref>=1.1.1",
]
dev = [
    "glfw",
    "glcontext",
    "autopep8",
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "mypy>=1.3.0",
    "importlib-metadata",
    "cython>=3.0.0a8",
    "wheel>=0.29.0",
    "setuptools>=61.2",
    "build[virtualenv]>=0.10.0",
    "sphinx>=5.0.0",
    "sphinx-toolbox>=1.1.0",
    "sphinx-hoverxref>=1.1.1",
]

[tool.setuptools]
include-package-data = false

[tool.pytest.ini_options]
python_files = "test*.py"
python_classes = "Test*"
python_functions = "test*"
addopts = ["tests/", "--cov=pyunity", "-vrs"]
filterwarnings = [
    "ignore:cannot collect test class .* because it has a __init__ constructor:pytest.PytestCollectionWarning"
]

[tool.coverage.run]
omit = [
    "pyunity/examples/*",
    "pyunity/window/providers/*"
]

[tool.coverage.report]
exclude_lines = [
    "def __repr__",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
    "pass$"
]

[tool.mypy]
python_version = "3.6"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
mypy_path = "stubs/"
disallow_untyped_defs = true
disallow_incomplete_defs = true
warn_unreachable = true
# stubtest command
# PYUNITY_CHANGE_MODULE=0 py -m mypy.stubtest --mypy-config-file pyproject.toml --allowlist .github/stubtest-ignore.txt pyunity
